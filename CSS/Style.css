/*Please filter the spreadsheet by the name of each html file to see the specific CSS for the elements in that page.*/

/*RESET CSS 
margin and padding are initiated to 0 to reduce browser inconsistency
all the elements have the property "box-sizing:border-box" that allows to include the padding and the border in the total height and the width*/
*{
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}
/*the text within the body will have black font, 'Robot' font (chose from Google fonts) and it will have a size of 1em. The height between the line is 2em. The unit "em" is relative to the defualt font size and I used it because they create a perfectly scalable layout*/
body{
	color: black;
	font-family: 'Roboto',Helvetica,'Segoe UI', sans-serif;
	font-weight: 300;
	font-size: 1em;
  line-height: 2em;
}

/*all the <a> dot not have decoration (the usual blue underline) and have white font */
a {
    text-decoration: none;
    color: white;
}

/*Only the text in the paragraph will have a slightly larger font-size*/
p{
  font-size: 1.3em;
}

/*All the h1 elements will have 6rem of space between the lines and a different font, always chosen from the Google fonts library*/
h1 {
    line-height: 6rem;
    font-family: 'Martel Sans', sans-serif;
}

/*all the h2 in the webpage will have a default size of 3em*/
h2{
  font-size: 3em;
}
/*every element <span> will be displayed as block and have a 4% padding around. The block property makes the element start in a new line and taking the whole width*/
span{
    display: block;
    padding: 4%;
}

/*all the elements in the header are displayed centered*/
header {
    text-align: center;
}

/*this is container for the navigation bar. The bar is positioned fixed on tob of the page. For this reason I gave the value 0 to the property top. The width is 100% as it include all the visible widht of the page. I used z-index=999 as it should be on top of every other element (An element with greater stack order is always in front of an element with a lower stack order). The font is uppercase and is align centered.*/
.container_nav{
    position: fixed;
    top: 0;
    z-index: 999;
    width: 100%;
    padding: 0.7em 0;
    background-color: #d6d6d6;
    font-family: sans-serif;
    text-align: center;
    text-transform: uppercase;
    font-weight: 200;
    display: flex;
    flex-direction: column;
}
.container_nav ul li a{
  position: relative;
}
.container_nav ul li a:after {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
  width: 0%;
  content: '.';
  color: transparent;
  background: #aaa;
  height: 1px;
}
.container_nav ul li a:hover:after {
  width: 100%;
}

label,#hamburger {
  display: none;
}
  /*all the <li> element of the nav are display as inline-block and the color of the text is white. I choose the inline-block element as it responds to the width and height.*/
  .container_nav li {
    display: inline-block;
    margin: 0 3.5em;
    padding: 0;
    color: white;
  }

  /*the <a> element in the navigation should be black and should have 1px of spacing withing the letters*/
  .container_nav a {
    padding: 0.3em 0;
    color: black;
    position: relative;
    letter-spacing: 1px;
  }
/*This <li> element has another unordered list nested into it that will become the dropdown menu bar*/
  .dropdown {
    position: relative;
    display: inline-block;
  }

/*the content of the dropdown is not displayed when the element is not hovered. It has absolute position and I moved it 32px from*/
.dropdown_content {
    font-size: 0.8rem;
    left: 32px;
    display: none;
    position: absolute;
    background-color: black;
    width: min-content;
    text-align: left;
    padding: 12px 8px;
    z-index: 4;
  }

 .dropdown:hover .dropdown_content{
    display: block;

  }
  .dropdown_content li a{
      display: inline;
      padding-left: 0;
      padding-top: 0.3em;
      color: white;
  }
  .dropdown_content li{
      margin-left: 1em;
  }

  /*The height of the main footer should have a dark background and is displayed as grid. that means that all the container elements inside this class will be separated into columns. I used the repeat() function to repeat column as many times as needed, than auto-fit so the column take all available space, and finally minmax() function to specifying a minimum width for the column, making sure they do not get too narrow. The position is sticky that means is positioned based on the user scroll. When it appears on the screen than it get fixed. */
  .main_footer{
    background:#454b57;
    line-height: 1.5em;
    display: grid;
    color: white;
    grid-template-columns: repeat(auto-fit, minmax(178px, 1fr));
    height: max-content;
    grid-gap: 2px;
    position: sticky;
}

/*the margin is auto so the content is moved in the middle of the container*/
.footer_name{
    margin: auto;
    text-align: center;
    padding-top: 25px;
}

/*the below relates to the griffith logo*/
.footer_name img{
  width: 80%;
}
/*for the icons I used the code from "fontawesome.com". To use it I  included the link in mine HTML, inside the head element*/
.footer_icon .fa{
  background:black;
}

.footer_icon{
margin-top: 30px;
}

.footer_links{
  margin: 2em 20%;
}

.footer_links h6{
  font-size: 20px;
  padding-bottom: 5px;
}

.footer_links ul{
  padding-bottom: 4%;
}

/*the list does not have any decoration previous the text, font is 16px , the space between the lines is 43px and they have 5px of padding on their left.*/
.footer_links li{
  font-size: 16px;
  line-height: 43px;
  list-style: none;
  padding-left: 5px;
}

/*Every time the mouse go over the links, their opacity increase and they get underlined*/
.footer_links a:hover{
  text-decoration: underline;
  opacity: 0.8;
}

/*the bottom of the footer with the copyright should take the whole width of the browser window. That is why the grid column start at the 1st column and ends at the 4th column*/
.footer_bottom {
    padding: 2%;
    text-align: center;
    grid-column: 1/4;
    background-color: black;
}

.footer_email{
  width: 60%;
  text-align: center;
  padding: 5%;
}

.footer_email img{
  width: 40%;
  margin: auto;
  display: block;
}
.footer_email img:hover{
  opacity: 0.5;
}


  /*________________________index.html_____*/
  #page {
    width: 100%;
  	overflow: hidden;
}

/*The class relates to the div element that wrap the img and the main title of the index page. Firstly, the container has an image saved in the folder as background. The background is fixed, that means that is not moving with the scroll of the page. The background-attachment property has as value "cover" so the picture will strech to take the all width of the page. In case the page cannot cover the whole width it will not repeat as it has the no-repeat function. */
.heading_title{    
    background-image: url(../Images/black_sky.jpg);
    background-color: #323b42;
    background-attachment: fixed;
    background-size: cover;
    background-repeat: no-repeat;
    display: flex;
    padding-top: 12%;
}

/*if the image overflow the size of the user window it will not overflow.*/
.heading_title img {
    padding-top: 16%;
    width: 100%;
    overflow: hidden;
}

/*This class is attributed to the div that wrap the first h1 element of the index page. I wanted the text to go over the picture that is why I gave the function absolute to the property position. With this function the element is removed from the normal flow and it is positioned relative to the nearest positioned ancestor. The width of the div element is 50% and text within is aligned on the left. For the font-size I used the vw unit that related to 1% of the width of the viewport*/
.txt_title{
    width: 50%;
    padding-left: 10%;
    position: absolute;
    text-align: left;
    color: #fff;
    font-size: 2vw;
}

/*The span is aligned center and has a top and bottom padding of 1em*/
.txt_title span{
    text-align: center;
    padding: 1em 0;
}

.container_home{  
  font-size: 1rem;
  font-family: 'Roboto', sans-serif;
  text-align: justify;
}

.item_home {
    padding: 2rem 25%;
}

.item_home h3{
  font-size: 2.5rem;
    padding: 3% 0;
}

/*For the h2 inside this container I decided to use a different font*/
.container_item h2{
  font-family: 'Niconne','Roboto', sans-serif;
}

.container_item{
    width: 60%;
    text-align: left;
    margin: auto;
    padding-bottom: 6%;
}

/*Each image inside this box has a border of burlywood colour. They have a margin of 2% on top, 4% on the sides and non on the bottom*/
.container_item img{
    width: 38%;
    border: burlywood solid 4px;
    margin: 2% 4% 0;
}


.item{
    display: grid;
    font-family: 'Roboto', sans-serif;
    text-align: justify;
}

.item_head {
    padding: 2% 0 0;
    font-size: 1rem;
    text-align: left;
}

/*I choose to make the span of a different colour, align it centered and with a padding around of 10px*/
.item_head span{
    color: #758184;
    text-align: center;
    margin: auto;
    padding: 10px;
    margin-bottom: 20px;
    line-height: 3rem;
}

/*the below two classes float the image on the right (the first) and on the left (the second) of their conteiners. This way the text will surround the image. Every pic has also a box-shadow */
.image_right{
    float: right;
    box-shadow: 8px 6px 15px 5px #7c7c7c;
    margin-left: 1rem;
}
.image_left{
    float: left;
    box-shadow: -8px 6px 15px 5px #7c7c7c;
    margin-right: 1rem;
}

/*The text float on the right of its container*/
.container_item.item{
    position: relative;
    width: 20%;
    float: right;
}

/*Here i stile the horizontal row displaying only 4 dots that have the same color of the border of the images. To position it in the middle I used the property margin:auto.*/
hr{
    list-style: dotted;
    border-bottom: burlywood 5px dotted;
    opacity: 0.7;
    width: 2%;
    margin: auto;
    border-top: 0;
    border-right: 0;
    border-left: 0;
}

/*when the user hover the <hr> it change colour.*/
hr:hover{
    border-color: crimson;
}

/*____________________ Contact.html________________*/

/*In the contact page I used an image as background that has fixed position and cover all the width of the page. Any overflow is hidden. I also added a background color in case the pic takes long to load.*/
#page_contact{
  background-image: url(../Images/rosessmaller.jpg);
  background-color: #d7c2cd;
    background-repeat: no-repeat;
    width: 100%;
    overflow: hidden;
    background-size: cover  ;
}

/*this class contain the form that enable the user to send a message to my email. the form has 10% of margin on top and is auto on the sides, that push the form on the middle. The width of the form is 50% this way takes only half of the screen in a scalable way. I changed the color of the text and the background colour. I used the inspection tool given by chrome browser to make the background color more opaque. The corner of the border are rounded*/
.form_container {
    width: 50%;
    margin: 10% auto;
    color: #431c61;
    background-color: #ffffffbd;
    border-radius: 50px;
}

.form_container h3{
    text-align: center;
}

.inner_form {
    padding: 5% 20%;
}

/*all the input, the select options and the textarea have a white border, are 100% wide and have a padding of 16px so it is easier to insert the info in it*/
input[type=text], select, textarea {
    width: 100%;
    padding: 16px;
    border: 1px solid #ccc;
    border-radius: 30px;
    margin-top: 6px;
    margin-bottom: 16px;
  }

  /*the type submit input is the button, I choose to fill the button with pink to refer to the roses of the page background. When the mouse go over the element the cursor change to pointer, showing to the user that the button will actually submit the text*/
  input[type=submit] {
   background-color: #f5c3bc;
    color: #431c61;
    padding: 18px 38px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  
  /*when the user go over the input element it changes colour becoming darker*/
  input[type=submit]:hover {
     background-color: #d03c83;
  }
  
/*______________________Job.html______________*/

/*I choose as background of the page the colour white*/
#page_job{
    background: #f3f3f3;
    width: 100%;
    overflow: hidden;
}

/*As in the other pages I choose to place an image as background of the first container. As for all the other backgrounds, the image cover the all dimension of the box and is fixed, that means does not move.*/
.wrap_container_job{
    background-image: url(../Images/job.png);
    overflow: hidden;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-attachment: fixed;
}

/*Since the image has a white space on its left decided to display the text inside the div with class="heading_job" on the left. I did that giving a top padding of 12rem, 2% on the bottom and 5% on the left. The position of the container is relative to its normal position*/
.heading_job{
    position: relative;
    width: 100%;
    display: flex;
    padding: 6rem 0 2% 5%;
}

/*As the heading, I wanted to position also the text on the left. I gave a width of 40% so the text does not go over the suitcase of the picture. The text is justified.*/
.text_heading_job{
    padding: 5% 0 10% 3%;
    width: 40%;
    text-align: justify;
}

/*The elements of the side container are aligned center.*/
.sidebar{
    text-align: center;
    background-color: #5b5b5bd9;
}
.sidebar h2{
    padding: 2% 0;
}
.aside_box{
    width: 100%;
    padding-bottom: 1.5rem;
    padding-top: 1%;
    font-weight: 600;
}
/*each list element is displayed inline, like for example a default <span>. This way they are on the same line.*/
.aside_box ul li{
    display: inline;
    margin-right: 2%;
}
.aside_box a{
  color: black;
  padding: 17px 10px;
}

/*Every time the user hover on the <a> elements a circle given by the bordder radius will appear. The text has also some black shadow to make it more visible*/
.aside_box a:hover{
  color: gainsboro;
  text-shadow: 0px 10px 20px black;
  border: solid 1px black;
  border-radius: 50%;
}


#timeline {
    width: 80%;
    margin: 10px auto;
    position: relative;
  }

 /*I use the before selector to create the line in the middle of the page. I position it absolute and in the middle of the page giving a left margin of 50%. I also made it visible giving a width of 2px and giving to the background the color black. */ 
#timeline:before {
    content: '';
    position: absolute;
    left: 50%;
    top: 0;
    margin: 0 0 0 -1px;
    width: 2px;
    height: 100%;
    background: black;
  }

/*each section takes the whole whidth of the precedent div element and have a bottom margin of 20%*/
#timeline section {
    width: 100%;
    margin: 0 0 20px 0;
    position: relative;
  }

/*with the selector ::after, after each section, is insert a block element and the clear property indicates that no floating element are allowed on either the lefgt and the right side. This make sure that the div class="inner" are separated one from the other.*/
#timeline section:after {
    content: '';
    display: block;
    clear: both;
  }

/*The class="inner" element has 40% width to take only part of the screen on the left and the right of the line. It has also a top margin of 5% in order to push it more down*/
.inner {
    width: 40%;
    margin: 5px 0 0 0;
    border-radius: 6px;
  }

/*the span with class="date" is absolute and is pushed in the middle in order to be just over the line created. This gives the idea of a timeline. To the element I gave also a grey border and a shadow to create a particular effect around the element.*/
.date {
  width: 60px;
  padding: 5px 0;
  position: absolute;
  top: 0;
  left: 50%;
  margin-left: -32px;
  border-radius: 100%;
  font-size: 12px;
  font-weight: 900;
  background: #25303B;
  color: rgba(255,255,255,0.5);
  border: 2px solid rgba(255,255,255,0.2);
  box-shadow: 0 0 0 3px #25303B;
  text-align: center;
  }

.year {
    font-size: 20px;
  }

.inner h2 {
    padding: 15px;
    margin: 0;
    color: #fff;
    font-size: 20px;
    letter-spacing: 1px;
    border-radius: 6px 6px 0 0;
    position: relative;
  }

/*To create a small arrow on the right handside of the container div "inner" I rotate an absolute container of 10px and placed it behind the header of the element. Both element have the same colour and no one can tell are two different containers.*/
.inner h2:after {
    content: '';
    position: absolute;
    top: 20px;
    right: -5px;
    width: 10px; 
    height: 10px;
    -webkit-transform: rotate(-50deg);
  }

/*Modified the text inside the container.*/
.inner p {
    padding: 15px;
    margin: 0;
    font-size: 14px;
    background: #fff;
    color: #656565;
    border-radius: 0 0 6px 6px;
  }
  /*the nth-child selector matches every element that is "n"th child. The formula 2n+2 indicates which element we are considering in this case it applies the property every two. In the specific in the formula used "n" is a counter and starts at 0, the 2 before indicates the cycle size and the 2 after is an offset value. The first element that will receive the property float="right" is the second (2*0+2) then the fourth (2*1+2) and so on.*/
#timeline section:nth-child(2n+2) .inner {
  float: right;
}
/*the same colour of the header for the small arrow*/
#timeline section:nth-child(2n+2) h2:after {
  left: -5px;
}
#timeline section:nth-child(1n+1) div.inner h2 {
  background: #92a5ca;
}
#timeline section:nth-child(1n+1) div.inner h2:after {
  background: #92a5ca;
}
#timeline section:nth-child(2n+2) div.inner h2 {
  background: #d9aaa7;
}
#timeline section:nth-child(2n+2) div.inner h2:after {
background: #d9aaa7;
}


.inner .date:hover{
      color: white;
      box-shadow: 0 0 0 9px #25303B;
}

/*all the logos have 50% width and are displayed in the middle*/
#timeline img{
    width: 50%;
    display: block;
    margin: auto;
    padding: 3%;
}

  /* _____________________hobbies.html*/

/*the page has a background that cover all page*/
#page_hobby{
  width: 100%;
    overflow: hidden;
    background-image: url(../Images/wood.jfif);
    background-size: cover;
    background-attachment: fixed;
}
.wrap_container{
  overflow: hidden;
}

/*For the font-size I used the vw unit that related to 1% of the width of the viewport. I used it for the scalability of the layout*/
.container_main{
    margin-top: 5%;
    padding: 0 4vw;
    padding-bottom: 4vw;
}

.heading_page{
    padding: 5rem 0 2rem 26%;
    color: white;
}

.heading_page h2{
  text-shadow: 1px 1px 15px black;
  font-size: 3rem;
}

.wrap_container img{
    width: 70%;
    margin: auto;
    padding: 5% 0 5% 0;
}

#container_hobbies{
  width: 68%;
  margin: auto;
  padding: 3% 2%;
  background: #dbdbdbe6;
}

.hobby h2{
    text-align: center;
    padding: 5% 0 1.8% 0;
    border-bottom: solid black 0.5px;
    font-family: 'Montserrat';
}

.hobby_inner{
    display: grid;
    grid-template-columns: 40% auto;
}

.hobby_inner img{
  width: 80%;
  margin: 5% auto;
  border: 5px solid black;
  padding: 0;
  box-shadow: -20px 13px 9px 15px #544747;
}

.hobby_img {
  display: grid;
  padding: 10px;
  width: 100%;
}

.hobby_txt{
    margin: auto;
    padding: 5%;
    text-align: justify;
    font-size: smaller;
}

/*______________about.html____________*/

.bio {
    padding: 10%;
    background-image: url(../Images/rosessmaller.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
}

/*the grid is divided in 4 section and have a gap of 4rem I used this to make the element more scalable.*/
.profile_container{
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-gap: 4rem;
}


.profile_title{
    display: grid;
    align-items: center;
    grid-template-columns: repeat(auto-fit, minmax(192px, 1fr));
    background-color: #eadee4;
    height: 70%;
    box-shadow: -2px 1px 20px 1px #444141;
}
.profile_title h1{
  line-height: 4vh;
}

#pic_profile img{
    width: 176%;
    margin-left: -70px;
    margin-top: -11px;
}

#pic_profile{
    width: 194px;
    height: 194px;
    overflow: hidden;
    border-radius: 50%;
    margin: 8% auto;
}

.profile_description{
    text-align: center;
    padding: 3% 0 5% 0;
}
.profile_icon{
    text-align: center;
}
/*https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_social_media_buttons*/
.fa {
    padding: 10px;
    font-size: 15px;
    width: 18%;
    text-align: center;
    text-decoration: none;
    margin: 5px 2px;
  }
  
  .fa:hover {
      opacity: 0.7;
  }
  
  .fa-facebook {
    background: #f5c3bc;
    color: white;
  }
  .fa-linkedin {
    background: #ea9abb;
    color: white;
  }
  .fa-instagram {
    background: #be8abf;
    color: white;
  }
  .fa-twitter {
    background: #e89da2;
    color: white;
  }

.btn{
  line-height: 1;
  margin: 3% 20%;
  width: 60%;
  background-color: #e6b2c6;
  color: black;
  font-size: 16px;
  padding: 16px 30px;
  border: none;
  cursor: pointer;
  border-radius: 5px;
  text-align: center;
  box-shadow: 0px 0px 4px #838383d1;
}

.btn:hover{
 opacity: 0.8;
}

#about_me{
    text-align: justify;
    line-height: 2em;
    background-color: white;
    padding: 4% 16% 8%;;
    grid-column: 2/5;
}

#about_me h2{
	text-align: center;
    padding: 20px 20% 8%;
}

.quote_container{
    margin-top: 1rem;
    opacity: 0.5;
}
.quote_container:hover{
    opacity: 3;
}
blockquote{
    width: 65%;
    margin: auto;
    padding: 3%;
    text-align: center;
    color: gray;
    font-size: 1.5em;
    font-style: italic;
    line-height: 1.4;
    position: relative;
    text-shadow: 0 1px white;
    z-index: 600;
}

.blockquote p{
    font-family: Georgia, serif;
    color: #fff; 
    line-height: 1.4;
}

/*the quote symbol displayed with "\201C" is positioned absolute before and after the blockquote*/
blockquote p:first-child::before{
    content: '\201C';
    color: #81bedb;
    font-size: 7.5em;
    font-weight: 700;
    opacity: .3;
    position: absolute;
    top: -.2em;
    left: -.3em; 
    text-shadow: none;
    z-index: -300;
}
blockquote p:first-child::after{
    content: '\201D';
    color: #81bedb;
    font-size: 7.5em;
    font-weight: 700;
    opacity: .3;
    position: absolute;
    bottom: -.5em;
    right: -.3em;    
    text-shadow: none;
    z-index: -300;
}
.quote_author {
    text-align: right;
}

/*___________________life.html____________*/

#page_life{
  width: 100%;
  overflow: hidden;
  background-image: url(../Images/treesupdated.jpg);
  background-size: cover;
  background-attachment: fixed;
}

.container_main_life {
  position: fixed;
}

.text_life{
  text-align: justify;
  width: 70%;
  padding: 1% 4% 4%;
  margin: 0 5%;
  background-color: #f3f3f3;
}
.text_life h1{
  line-height: 4rem;
}
.text_life p{
  font-family: 'Roboto';
  font-size: 2.5vh;
  padding: 1%;
}

.images_life{
  position: relative;
  width: 40%;
  top: 0;
  margin-left: 68%;
  z-index: 500;
}

.images_life img{
  width: 50%;
  background-color: black;
  display: block;
}


/*______________________references.html___*/

#page_ref{
  background-attachment: fixed;
  background-color: #f3e3e37a;;
  background-repeat: no-repeat;
  background-size: cover;
}

.ackn_ref{
  display: flex;
  background-color: #9cb5df;
  padding: 4% 20%;
  margin: 3% auto 0;
}

.ackn_ref h3{
  font-size: 30px;
  padding-bottom: 5%;
  text-align: center;
}

.ackn_ref p{
  text-align: justify;
  padding: 0 3rem;
}

.ackn_ref img{
  width: 13rem;
  border: solid 3px white;
  box-shadow: 0px 0px 0px 20px #4b4b4b;
}

.ref_container {
  width: 60%;
  background: white;
  margin: auto;
}

.reference a{
  color: black;
}
.reference{
  padding: 5%;
}
.reference a:hover{
  text-decoration: underline;
}
.reference h2{
  padding:25px;
  text-align: center;
}
.reference p{
  padding: 25px;
  text-align: center;
}
.reference li{
  font-size: 1rem;
  list-style: none;
}

.reference h3{
  padding: 4%;
}